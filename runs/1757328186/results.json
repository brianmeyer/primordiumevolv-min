{
  "run_id": 101,
  "task_class": "code",
  "task": "Write a simple Python function that prints hello world",
  "assertions": [],
  "best_score": 0.30771883145309487,
  "best_total_reward": 0.4385854981197616,
  "best_recipe": {
    "system": "You are a concise senior engineer. Return precise, directly usable output.",
    "nudge": "Respond in bullet points.",
    "params": {
      "temperature": 0.7,
      "top_k": 38,
      "max_tokens": 4096
    },
    "use_rag": true,
    "use_memory": false,
    "use_web": false,
    "fewshot": null,
    "engine": "ollama"
  },
  "operator_stats": {
    "add_fewshot": {
      "n": 10,
      "avg_reward": 0.65949029074891
    },
    "inject_rag": {
      "n": 17,
      "avg_reward": 0.6282007943707641,
      "mean_payoff": 0.02579914694822127
    },
    "raise_temp": {
      "n": 8,
      "avg_reward": 0.59261332672835
    },
    "toggle_web": {
      "n": 3,
      "avg_reward": 0.5033899542338864
    },
    "change_system": {
      "n": 8,
      "avg_reward": 0.6068244984971182
    },
    "change_nudge": {
      "n": 9,
      "avg_reward": 0.6723750334401382
    },
    "lower_temp": {
      "n": 12,
      "avg_reward": 0.624445096280936
    },
    "inject_memory": {
      "n": 12,
      "avg_reward": 0.5871779429463514
    },
    "lower_top_k": {
      "n": 10,
      "avg_reward": 0.688457579248057,
      "mean_payoff": 0.03982017709672642
    },
    "raise_top_k": {
      "n": 10,
      "avg_reward": 0.5878585006045236
    }
  },
  "baseline": 0.6788969487452675,
  "improvement": -0.37117811729217265,
  "total_reward_improvement": 0.4385854981197616,
  "timestamp": 1757328186,
  "metrics": {
    "best_total_reward": 0.4385854981197616,
    "best_score": 0.30771883145309487,
    "avg_total_reward": null,
    "steps_to_best": 1,
    "cost_penalty_avg": 0.18642444444444448,
    "promotion": {
      "eligible": false,
      "reasons": [
        "cost too high: 0.186 > 0.090"
      ]
    }
  },
  "best_reward_breakdown": {
    "outcome_reward": 0.30771883145309487,
    "process_reward": 0.2,
    "cost_penalty": 0.06913333333333334,
    "total_reward": 0.4385854981197616,
    "outcome_metadata": {
      "method": "fallback_semantic",
      "groq_error": "name 'judge_results' is not defined"
    }
  },
  "eval": {
    "eligible": true,
    "safety": {
      "ok": true,
      "matches": []
    }
  }
}
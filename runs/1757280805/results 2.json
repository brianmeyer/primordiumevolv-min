{
  "run_id": 55,
  "task_class": "code",
  "task": "Write a Python function fibonacci(n) that returns the nth Fibonacci number. Prefer a recursive approach and include a brief docstring.",
  "assertions": [
    "def fibonacci",
    "recursive",
    "returns correct output for n=10"
  ],
  "best_score": -Infinity,
  "best_total_reward": -Infinity,
  "best_recipe": null,
  "operator_stats": {
    "add_fewshot": {
      "n": 7,
      "avg_reward": 0.6775600395085769
    },
    "inject_rag": {
      "n": 9,
      "avg_reward": 0.624498270844041
    },
    "raise_temp": {
      "n": 6,
      "avg_reward": 0.6026268039509148
    },
    "toggle_web": {
      "n": 1,
      "avg_reward": 0.4948097943880382
    },
    "change_system": {
      "n": 4,
      "avg_reward": 0.6426614755943793
    },
    "change_nudge": {
      "n": 5,
      "avg_reward": 0.6546040392170613
    },
    "lower_temp": {
      "n": 7,
      "avg_reward": 0.6378466436126862
    },
    "inject_memory": {
      "n": 6,
      "avg_reward": 0.6142101628555207
    },
    "lower_top_k": {
      "n": 5,
      "avg_reward": 0.7012496799545561
    },
    "raise_top_k": {
      "n": 4,
      "avg_reward": 0.655187784138755
    }
  },
  "baseline": 0.6756256613332956,
  "improvement": 0,
  "total_reward_improvement": -Infinity,
  "timestamp": 1757280805,
  "metrics": {
    "best_total_reward": -Infinity,
    "best_score": -Infinity,
    "avg_total_reward": null,
    "steps_to_best": 3,
    "cost_penalty_avg": 0.0,
    "promotion": {
      "eligible": false,
      "reasons": [
        "insufficient total_reward improvement: -inf < 0.05"
      ]
    }
  }
}